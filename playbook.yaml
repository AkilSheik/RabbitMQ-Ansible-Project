- hosts: myvirtualmachines
  become: yes
  tasks:
      - name: Install Utility software
        apt: name={{item}} state=latest update_cache=yes
        with_items:
          - software-properties-common
      - name: Make sure pymysql is present
        become: true # needed if the other tasks are not played as root
        pip:
         name: pymysql
         state: present
      - name: Add apt key for installing MariaDB repository
        become: yes
        ansible.builtin.apt_key:
           keyserver: keyserver.ubuntu.com
           id: F1656F24C74CD1D8
      - name: Install MariaDB repository 10.3
        become: yes
        apt_repository: repo='deb [arch=amd64] http://mirror.zol.co.zw/mariadb/repo/10.3/ubuntu xenial main' state=present

      - name: Add repository key to the system
        become: yes
        apt_key: keyserver=hkp://keyserver.ubuntu.com:80 id=0xF1656F24C74CD1D8

      - name: update
        apt: update_cache=yes
        ignore_errors: yes

      - name: Install MariaDB Server 10.3
        apt: name=mariadb-server state=latest

      - name: Install MariaDB Client 10.3
        apt: name=mariadb-client state=latest

      - name: Restart MariaDB 10.3
        service: name=mysql state=restarted

      - name: Create MariaDB Directories
        file: path=/data/{{item}} state=directory owner=mysql group=mysql recurse=yes
        with_items:
          - db
          - log

      - name: Count files in /data/db
        find:
          path=/data/db
          patterns='\*'
        register: db_files

      - name: Run mysql_install_db only if /data/db is empty
        command: mysql_install_db --datadir=/data/db
        when: db_files.matched|int == 0

      - name: Start MariaDB
        service:
          name=mysql
          state=started

      - name: Is root password set?
        command: mysql -u root -p -S /var/run/mysqld/mysqld.sock --execute "SELECT NOW()"
        register: is_root_password_set
        ignore_errors: yes

      - name: Generate mysql root password
        shell: tr -dc A-Za-z0-9 </dev/urandom | head -c 13
        register: mysql_root_password
        when: is_root_password_set.rc == 0

      - name: Set root password
        mysql_user:
          login_unix_socket: /var/run/mysqld/mysqld.sock
          user: root
          password: "{{mysql_root_password.stdout}}"
          host: localhost
        when: is_root_password_set.rc == 0

      - name: Inform user of mysql root password
        debug:
          msg: "MariaDB root password was set to {{mysql_root_password.stdout}}"
        when: is_root_password_set.rc == 0

      - name: Create myapp database
        mysql_db:
          login_unix_socket: /var/run/mysqld/mysqld.sock
          name: myapp
          login_user: root
          login_password: "{{mysql_root_password.stdout}}"
          login_host: localhost
          state: present
        when: is_root_password_set.rc == 0

      - name: Generate myapp\_rw password
        shell: tr -d -c "a-zA-Z0-9" < /dev/urandom | head -c 10
        register: mysql_myapp_rw_password
        when: is_root_password_set.rc == 0

      - name: Create user for myapp db
        mysql_user:
          login_unix_socket: /var/run/mysqld/mysqld.sock
          name: myapp_rw
          password: "{{mysql_myapp_rw_password}}"
          priv: myapp.*:SELECT,INSERT,UPDATE,DELETE
          login_user:
          login_password: "{{mysql_root_password.stdout}}"
          state: present
        when: is_root_password_set.rc == 0
